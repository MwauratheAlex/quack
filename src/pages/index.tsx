import Head from "next/head";
import Image from "next/image";
import { 
  SignInButton, 
  SignOutButton, 
  SignedOut, 
  SignedIn, 
  useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);
// import { UserButton } from "@clerk/nextjs";


import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const {user} = useUser();
  if (!user) return null;

  return (
  <div className="flex gap-4">
    <Image 
      src={user.imageUrl} 
      alt="Profile image" 
      className="h-14 w-14 rounded-full"
      height={56}
      width={56}/>
    <input 
      placeholder="Type some emojis!" 
      className="bg-transparent grow outline-none"/>
  </div>
  )
}
type PostWithUsers = RouterOutputs["post"]["getAll"][number]
const PostView = (props: PostWithUsers) => {
  const {post, author}= props;
  return (
  <div key={post.id} className="border-b border-slate-500 p-4 gap-4 flex">
    <Image
      src={author.profileImgUrl} 
      alt={`@${author.username} profile picture`}
      className="h-14 w-14 rounded-full"
      height={56}
      width={56}
      />
      <div className="flex flex-col">
        <div className="flex text-slate-300 font-bold gap-1">
          <span>{`@ ${author.username}`}</span>
          <span className="font-thin">{`. ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
  </div>
  )
}

export default function Home() {
  const {data, isLoading} = api.post.getAll.useQuery();
  if (isLoading) {
    return (
      <div>Loading ...</div>
    )
  }
  if (!data) {
    return (
      <div>Something went wrong!</div>
    )
  }
  

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full border-x border-slate-500 md:max-w-2xl">
          <div className="border-b border-slate-500 p-4">
            <SignedIn>
              <CreatePostWizard />
              <SignOutButton/>
            </SignedIn>
            <SignedOut><SignInButton/></SignedOut>
          </div>
          <div className="flex flex-col">
            {[...data, ...data].map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id}/>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
